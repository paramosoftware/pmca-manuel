name: Generate Electron artifacts
on:
  pull_request:
    types: [closed]
    branches:
      - generate-electron-artifacts

jobs:
  publish-electron-artifacts:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12]
  
    runs-on: ${{ matrix.os }}
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.0'

      - name: Install pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v3

      - name: Set pnpm version
        if: matrix.os == 'windows-2022'
        run: echo "PNPM_VERSION=$(pnpm --version)" >> $env:GITHUB_ENV

      - name: Set pnpm.cjs path
        if: matrix.os == 'windows-2022'
        env:
          PNPM_PATH: ${{ steps.setup-pnpm.outputs.dest }}
          PNPM_FIRST_HALF: /node_modules/.pnpm/pnpm@
          PNPM_SECOND_HALF: /node_modules/pnpm/bin/pnpm.cjs
        run: |
          echo "PNPM_CJS=${{ env.PNPM_PATH }}${{ env.PNPM_FIRST_HALF }}${{ env.PNPM_VERSION }}${{ env.PNPM_SECOND_HALF }}" >> $env:GITHUB_ENV

      - name: Fix pnpm.cjs
        if: matrix.os == 'windows-2022'
        run: |
          echo "PNPM_CJS: ${{ env.PNPM_CJS }}"
          sed -i 's/#!\/usr\/bin\/env node/#!node/' ${{ env.PNPM_CJS }}
          cat ${{ env.PNPM_CJS }}
    
      - name: Build electron
        run: pnpm electron:build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: electron-artifacts
          path: |
            builds/*/*.*
            !builds/*/*.yaml
            !builds/*/*.yml
            !.icon-set
            !*.blockmap