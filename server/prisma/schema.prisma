// For more information on the convetions adopted in this project,
// please refer to the documentation: docs/prisma-schema.md

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Group {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?

  users       User[] /// uiField:autocomplete
  permissions GroupPermission[] /// uiField:permission

  nameSlug              String  @unique
  nameNormalized        String?
  descriptionNormalized String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model GroupPermission {
  id Int @id @default(autoincrement())

  resourceId Int
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  groupId    Int
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  read   Boolean? @default(true)
  create Boolean? @default(false)
  update Boolean? @default(false)
  delete Boolean? @default(false)
  batch  Boolean? @default(false)
  import Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([resourceId, groupId])
}

/// isAppModel:true|isPublic:true
model Resource {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  model          String
  label          String
  labelPlural    String
  description    String?
  genderNoun     String   @default("n") /// defaultOptions:n,m,f
  isRelation     Boolean? @default(false)
  isHierarchical Boolean? @default(false)
  isAppModel     Boolean? @default(false)
  isPublic       Boolean? @default(false)
  canBeExported  Boolean? @default(false)
  canBeImported  Boolean? @default(false)

  parent   Resource?  @relation("ResourceToChildren", fields: [parentId], references: [id])
  parentId Int?
  children Resource[] @relation("ResourceToChildren")

  published Boolean @default(false)

  modelNormalized       String
  nameSlug              String  @unique
  labelSlug             String  @unique
  nameNormalized        String?
  labelNormalized       String?
  labelPluralNormalized String?
  descriptionNormalized String?

  permissions GroupPermission[] /// disabled:true|hidden:true

  fields        ResourceField[]
  relatedFields ResourceField[] @relation("RelatedFields") /// disabled:true|hidden:true

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model ResourceField {
  id             Int      @id @default(autoincrement())
  name           String
  label          String
  valueType      String   @default("string") /// defaultOptions:string,number,boolean,object,array
  uiField        String   @default("input") /// defaultOptions:input,textarea,rich,select,checkbox,autocomplete,finder,media,auxiliaryForm,dropzone,permission,password
  required       Boolean? @default(false) @map("required")
  hidden         Boolean? @default(false)
  disabled       Boolean? @default(false)
  inputType      String?  @default("text") /// defaultOptions:text,number,email,date,color,password,search,hidden,checkbox,radio
  placeholder    String?
  defaultValue   String?
  defaultOptions String?
  query          String?
  max            Int?
  isRich         Boolean? @default(false)
  isHierarchical Boolean? @default(false)
  allowCreate    Boolean? @default(true)
  allowMultiple  Boolean? @default(true)
  includeExport  Boolean? @default(false)
  position       Int      @default(0)

  oppositeFieldId       Int?
  relatedOppositeFields ResourceField[] @relation("OppositeField")
  oppositeField         ResourceField?  @relation("OppositeField", fields: [oppositeFieldId], references: [id])

  relatedResourceId Int?
  relatedResource   Resource? @relation(fields: [relatedResourceId], references: [id], onDelete: Cascade, name: "RelatedFields")

  resourceId Int
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  published Boolean @default(false)
  isPrivate Boolean @default(false)

  conceptChanges ConceptChanges[] /// disabled:true|hidden:true

  nameNormalized        String?
  labelNormalized       String?
  placeholderNormalized String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([resourceId, name])
}

model User {
  id    String @id @default(uuid()) /// isPrivate:true
  login String @unique /// isPrivate:true
  email String @unique /// isPrivate:true
  name  String

  password  String /// uiField:password|isPrivate:true
  isBlocked Boolean?      @default(false) /// isPrivate:true
  isAdmin   Boolean?      @default(false) /// disabled:true|hidden:true|isPrivate:true
  sessions  UserSession[] /// disabled:true|hidden:true|isPrivate:true

  conceptChanges ConceptChanges[] /// disabled:true|hidden:true|isPrivate:true

  groupId Int?
  group   Group? @relation(fields: [groupId], references: [id]) /// isPrivate:true

  nameNormalized  String?
  loginNormalized String?

  published Boolean @default(true) /// defaultValue:true|isPrivate:true

  createdAt DateTime? @default(now()) /// isPrivate:true
  updatedAt DateTime? @updatedAt /// isPrivate:true
}

model UserSession {
  id String @id @default(uuid())

  refreshToken String @unique

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, refreshToken])
}

/// isPublic:true|canBeExported:true|canBeImported:true
model Concept {
  id   Int    @id @default(autoincrement()) /// includeExport:true
  name String /// includeExport:true|label:Termo

  glossaryId Int /// hidden:true
  glossary   Glossary @relation(fields: [glossaryId], references: [id], onDelete: Cascade) /// hidden:true

  parentId Int?
  children Concept[] @relation("ConceptToChildren")
  parent   Concept?  @relation("ConceptToChildren", fields: [parentId], references: [id]) /// includeExport:true

  nameSlug     String  @unique
  definition   String? /// includeExport:true
  notes        String? /// includeExport:true
  privateNotes String? /// isPrivate:true|uiField:textarea

  concepts        Concept[] @relation("ConceptToConcept") /// includeExport:true|allowCreate:false
  relatedConcepts Concept[] @relation("ConceptToConcept") /// includeExport:true|allowCreate:false

  variations   ConceptVariation[] /// includeExport:true
  translations ConceptTranslation[] /// includeExport:true

  references Reference[] /// includeExport:true
  media      ConceptMedia[]

  published Boolean @default(true) /// defaultValue:true|includeExport:true

  accessCount Int              @default(0) /// disabled:true|hidden:true
  position    Int              @default(1) /// disabled:true|hidden:true|includeExport:true
  changes     ConceptChanges[] /// disabled:true|hidden:true

  definitionNormalized   String?
  nameNormalized         String?
  notesNormalized        String?
  privateNotesNormalized String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConceptChanges {
  id      Int    @id @default(autoincrement())
  changes String

  userId String? /// isPrivate:true
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  conceptId Int
  concept   Concept @relation(fields: [conceptId], references: [id], onDelete: Cascade)

  fieldId Int?
  field   ResourceField? @relation(fields: [fieldId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConceptMedia {
  id       Int    @id @default(autoincrement())
  name     String @unique
  position Int    @default(0)

  originalFilename String?
  path             String?
  subtitle         String?
  type             String?
  published        Boolean @default(true) /// defaultValue:true

  subtitleNormalized String?

  conceptId Int
  concept   Concept @relation(fields: [conceptId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model ReferenceMedia {
  id       Int    @id @default(autoincrement())
  name     String @unique
  position Int    @default(0)

  originalFilename String?
  path             String?
  subtitle         String?
  type             String?
  published        Boolean @default(true) /// defaultValue:true

  subtitleNormalized String?

  referenceId Int
  reference  Reference @relation(fields: [referenceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model ConceptVariation {
  id   Int    @id @default(autoincrement())
  name String

  nameNormalized String?

  conceptId Int
  concept   Concept @relation(fields: [conceptId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConceptTranslation {
  id   Int    @id @default(autoincrement())
  name String

  languageId Int? /// required:true
  language   Language? @relation(fields: [languageId], references: [id], onDelete: Cascade) /// required:true
  conceptId  Int
  concept    Concept   @relation(fields: [conceptId], references: [id], onDelete: Cascade)

  nameNormalized String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// isPublic:true|canBeExported:true|canBeImported:true
model Language {
  id   Int     @id @default(autoincrement())
  name String  @unique /// includeExport:true
  code String? @unique /// includeExport:true

  translations ConceptTranslation[] /// disabled:true|hidden:true
  glossaries Glossary[] /// disabled:true|hidden:true

  published Boolean @default(true) /// defaultValue:true|includeExport:true

  nameNormalized String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// isPublic:true|canBeExported:true|canBeImported:true
model Reference {
  id   Int    @id @default(autoincrement())
  name String @unique /// uiField:rich|isRich:true|includeExport:true

  nameRich       String? /// hidden:true|includeExport:true
  nameNormalized String?
  

  concepts Concept[]
  media ReferenceMedia[] /// label:PDFs
  published Boolean? @default(true) /// defaultValue:true

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// isPublic:true
model WebPage {
  id       Int    @id @default(autoincrement())
  name     String @unique
  nameSlug String @unique
  content  String
  menuName String

  published Boolean @default(true) /// defaultValue:true

  nameNormalized    String?
  contentNormalized String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// isPublic:true
model Glossary {
  id   Int    @id @default(autoincrement())
  name String @unique
  code String? @unique /// label:ID
  description String?

  keywords Keyword[]

  languageId Int? /// required:true
  language   Language? @relation(fields: [languageId], references: [id]) /// required:true

  concepts Concept[] /// disabled:true|hidden:true

  nameNormalized        String?
  descriptionNormalized String?

  published Boolean @default(true) /// defaultValue:true
  default Boolean @default(false) /// defaultValue:false

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// isPublic:true|canBeExported:true|canBeImported:true
model Keyword {
  id   Int    @id @default(autoincrement())
  name String @unique /// includeExport:true

  glossaries Glossary[] /// disabled:true|hidden:true

  nameNormalized String?

  published Boolean @default(true) /// defaultValue:true|includeExport:true

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}